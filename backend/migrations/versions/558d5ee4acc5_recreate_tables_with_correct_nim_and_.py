"""Recreate tables with correct nim and nidn

Revision ID: 558d5ee4acc5
Revises: 
Create Date: 2025-05-04 01:49:46.075628

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '558d5ee4acc5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('answers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.String(length=50), nullable=False),
    sa.Column('points', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('classes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lecturers',
    sa.Column('nidn', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('nidn')
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('class_lecturers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('lecturer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['lecturer_id'], ['lecturers.nidn'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lecturer_scores',
    sa.Column('lecturer_id', sa.Integer(), nullable=False),
    sa.Column('average_score', sa.Float(), nullable=True),
    sa.Column('score_count', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['lecturer_id'], ['lecturers.nidn'], ),
    sa.PrimaryKeyConstraint('lecturer_id')
    )
    op.create_table('students',
    sa.Column('nim', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('nim'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('evaluations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('lecturer_id', sa.Integer(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['lecturer_id'], ['lecturers.nidn'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.nim'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluation_answers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('evaluation_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('answer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['answer_id'], ['answers.id'], ),
    sa.ForeignKeyConstraint(['evaluation_id'], ['evaluations.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('evaluation_answers')
    op.drop_table('evaluations')
    op.drop_table('students')
    op.drop_table('lecturer_scores')
    op.drop_table('class_lecturers')
    op.drop_table('users')
    op.drop_table('questions')
    op.drop_table('lecturers')
    op.drop_table('classes')
    op.drop_table('answers')
    # ### end Alembic commands ###
